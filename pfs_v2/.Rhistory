d[[i]] = as.data.frame(pred1[[i]][1])[3,]
}
res = list()
res$CIndex = as.data.frame(rbindlist(c)); rownames(res$CIndex) = times; colnames(res$CIndex) = methods
res$Briererror = as.data.frame(rbindlist(b)); rownames(res$Briererror) = times; colnames(res$Briererror) = methods
res$DeltaCIndex = as.data.frame(rbindlist(d)); rownames(res$DeltaCIndex) = times; colnames(res$DeltaCIndex) = methods
predictions = list(CIndex = res$CIndex,
Briererror = res$Briererror,
DeltaCIndex = res$DeltaCIndex)
predictions$CIndex
# Module 2 (Squamous vs Adenoma)
# =============
# =============
require(survival)
# PFS
# =================================
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
cc = clinical[which(clinical$Cohort == 'Riaz2017' | clinical$Cohort == 'TCGA-SKCM' | clinical$Cohort == 'TCGA-LUAD' | clinical$Cohort == 'TCGA-LUSC'),]
table(cc$Cohort, cc$tumor.type)
table(cc$Drug, cc$tumor.type)
cc$TMB_c = ifelse(cc$TMB <= 100, 'low',
ifelse(cc$TMB < 242 & cc$TMB > 100, 'medium', 'high'))
cc$TMB
cc$PFS.Event = as.numeric(cc$PFS.Event)
# Module 3 (TMB)
# =============
# =============
require(survival)
cox = coxph(Surv(PFS, PFS.Event) ~ Age + TMB_c:Drug , data = cc, x = T)
summary(cox)
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
cc = clinical[which(clinical$Cohort == 'Riaz2017' | clinical$Cohort == 'TCGA-SKCM' | clinical$Cohort == 'TCGA-LUAD' | clinical$Cohort == 'TCGA-LUSC'),]
cc = cc[which(cc$StageIV == 'yes'),]
cc$TMB_c = ifelse(cc$TMB <= 100, 'low',
ifelse(cc$TMB < 242 & cc$TMB > 100, 'medium', 'high'))
cc$PFS.Event = as.numeric(cc$PFS.Event)
# cc = cc[-which(is.na(cc$PFS)),]
cox = coxph(Surv(PFS, PFS.Event) ~ Age + TMB_c:Drug , data = cc, x = T)
summary(cox)
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
cc = clinical[which(clinical$Cohort == 'Riaz2017' | clinical$Cohort == 'TCGA-SKCM' | clinical$Cohort == 'TCGA-LUAD' | clinical$Cohort == 'TCGA-LUSC'),]
cc = cc[which(cc$StageIV == 'yes'),]
cc$TMB_c = ifelse(cc$TMB <= 100, 'low',
ifelse(cc$TMB < 242 & cc$TMB > 100, 'medium', 'high'))
cc$PFS.Event = as.numeric(cc$PFS.Event)
# cc = cc[-which(is.na(cc$PFS)),]
cox = coxph(Surv(PFS, PFS.Event) ~ Age + Gender + TMB_c:Drug , data = cc, x = T)
summary(cox)
table(cc$tumor.type)
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
cc = clinical[which(clinical$Cohort == 'Riaz2017' | clinical$Cohort == 'TCGA-SKCM' | clinical$Cohort == 'TCGA-LUAD' | clinical$Cohort == 'TCGA-LUSC'),]
cc = cc[which(cc$StageIV == 'yes'),]
table(cc$tumor.type)
table(cc$tumor.type, cc$Drug)
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
cc = clinical[which(clinical$Cohort == 'Riaz2017' | clinical$Cohort == 'TCGA-SKCM' | clinical$Cohort == 'TCGA-LUAD' | clinical$Cohort == 'TCGA-LUSC'),]
table(cc$tumor.type, cc$Drug)
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
cc = clinical[which(clinical$Cohort == 'Riaz2017' | clinical$Cohort == 'TCGA-SKCM' | clinical$Cohort == 'TCGA-LUAD' | clinical$Cohort == 'TCGA-LUSC'),]
cc = cc[which(cc$StageIV == 'yes'),]
cc$TMB_c = ifelse(cc$TMB <= 100, 'low',
ifelse(cc$TMB < 242 & cc$TMB > 100, 'medium', 'high'))
cc$PFS.Event = as.numeric(cc$PFS.Event)
# cc = cc[-which(is.na(cc$PFS)),]
cox = coxph(Surv(PFS, PFS.Event) ~ Age + tumor.type + TMB_c:Drug , data = cc, x = T)
summary(cox)
cox = coxph(Surv(PFS, PFS.Event) ~ Age + tumor.type + TMB_c*Drug , data = cc, x = T)
summary(cox)
cc$PFS
which(is.na(clinical$TMB))
# Module 3 (TMB)
# =============
# =============
require(survival)
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
tmb = clinical[-which(is.na(clinical$TMB)),]
table(tmb$Cohort, tmb$Drug)
table(tmb$tumor.type, tmb$Drug)
# cc = clinical[which(clinical$Cohort == 'Riaz2017' | clinical$Cohort == 'TCGA-SKCM' | clinical$Cohort == 'TCGA-LUAD' | clinical$Cohort == 'TCGA-LUSC'),]
# cc = cc[which(cc$StageIV == 'yes'),]
cc = tmb
cc$TMB_c = ifelse(cc$TMB <= 100, 'low',
ifelse(cc$TMB < 242 & cc$TMB > 100, 'medium', 'high'))
cc$PFS.Event = as.numeric(cc$PFS.Event)
cc$PFS.Event
cox = coxph(Surv(PFS, PFS.Event) ~ Age + TMB_c:Drug , data = cc, x = T)
summary(cox)
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
tmb = clinical[-which(is.na(clinical$TMB)),]
tmb = tmb[which(tmb$tumor.type == 'Melanoma'),]
# cc = clinical[which(clinical$Cohort == 'Riaz2017' | clinical$Cohort == 'TCGA-SKCM' | clinical$Cohort == 'TCGA-LUAD' | clinical$Cohort == 'TCGA-LUSC'),]
# cc = cc[which(cc$StageIV == 'yes'),]
cc = tmb
table(cc$Cohort, cc$Drug)
table(cc$tumor.type, cc$Drug)
cc$TMB_c = ifelse(cc$TMB <= 100, 'low',
ifelse(cc$TMB < 242 & cc$TMB > 100, 'medium', 'high'))
cc$PFS.Event = as.numeric(cc$PFS.Event)
cox = coxph(Surv(PFS, PFS.Event) ~ Age + TMB_c:Drug , data = cc, x = T)
summary(cox)
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
tmb = clinical[-which(is.na(clinical$TMB)),]
tmb = tmb[which(tmb$tumor.type == 'Melanoma'),]
# cc = clinical[which(clinical$Cohort == 'Riaz2017' | clinical$Cohort == 'TCGA-SKCM' | clinical$Cohort == 'TCGA-LUAD' | clinical$Cohort == 'TCGA-LUSC'),]
cc = tmb
cc = cc[which(cc$StageIV == 'yes'),]
table(cc$tumor.type, cc$Drug)
cc$TMB_c = ifelse(cc$TMB <= 100, 'low',
ifelse(cc$TMB < 242 & cc$TMB > 100, 'medium', 'high'))
cc$PFS.Event = as.numeric(cc$PFS.Event)
cox = coxph(Surv(PFS, PFS.Event) ~ Age + TMB_c:Drug , data = cc, x = T)
summary(cox)
cox = coxph(Surv(PFS, PFS.Event) ~ Age + TMB_c*Drug , data = cc, x = T)
summary(cox)
cox = cph(Surv(PFS, PFS.Event) ~ Age + TMB_c*Drug , data = cc, x = T)
?coph
?cph
require(rms)
cox = cph(Surv(PFS, PFS.Event) ~ Age + TMB_c*Drug , data = cc, x = T)
summary(cox)
cox
cox = coxph(Surv(PFS, PFS.Event) ~ Age + TMB_c*Drug , data = cc, x = T)
cox
cc
cox = cph(Surv(PFS, PFS.Event) ~ Age + TMB_c:Drug , data = cc, x = T)
cox = cph(Surv(PFS, PFS.Event) ~ Age + TMB_c*Drug, data = cc, x = T)
cox = cph(Surv(PFS, PFS.Event) ~ Age + TMB_c*Drug, data = cc, x = T, y = T)
assign('dd', datadist(clinical))
options(datadist = 'dd')
predict(cox)
cox
cox = cph(Surv(PFS, PFS.Event) ~ (Age + TMB_c)*Drug, data = cc, x = T, y = T)
# Module 3 (TMB)
# =============
# =============
require(survival)
require(rms)
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
tmb = clinical[-which(is.na(clinical$TMB)),]
tmb = tmb[which(tmb$tumor.type == 'Melanoma'),]
table(tmb$Drug)
cc = tmb
cc = cc[which(cc$StageIV == 'yes'),]
table(cc$tumor.type, cc$Drug)
cc$TMB_c = ifelse(cc$TMB <= 100, 'low',
ifelse(cc$TMB < 242 & cc$TMB > 100, 'medium', 'high'))
cc$PFS.Event = as.numeric(cc$PFS.Event)
cox = cph(Surv(PFS, PFS.Event) ~ (Age + TMB_c)*Drug, data = cc, x = T, y = T)
assign('dd', datadist(clinical))
options(datadist = 'dd')
assign('dd', datadist(cc))
cc = c[, c('Age', 'TMB_c', 'Drug', 'PFS', 'PFS.Event')]
cc = cc[, c('Age', 'TMB_c', 'Drug', 'PFS', 'PFS.Event')]
assign('dd', datadist(cc))
options(datadist = 'dd')
cox = cph(Surv(PFS, PFS.Event) ~ (Age + TMB_c)*Drug, data = cc, x = T, y = T)
cox
cox = cph(Surv(PFS, PFS.Event) ~ (Age + TMB_c)*Drug, data = cc, x = T, y = T, survival = T)
cox
predict(cox)
plot(cox)
cox = cph(Surv(PFS, PFS.Event) ~ (Age + TMB_c)*Drug, data = cc, x = T, y = T, surv = T)
cox
dim(cc)
# =============
require(survival)
require(rms)
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
# Filter patients
tmb = clinical[-which(is.na(clinical$TMB)),]
cc = tmb
cc = cc[which(cc$StageIV == 'yes'),]
print(table(cc$tumor.type, cc$Drug))
cc$TMB_c = ifelse(cc$TMB <= 100, 'low',
ifelse(cc$TMB < 242 & cc$TMB > 100, 'medium', 'high'))
cc$PFS.Event = as.numeric(cc$PFS.Event)
# cc = cc[-which(is.na(cc$PFS)),]
cc = cc[, c('Age', 'TMB_c', 'Drug', 'PFS', 'PFS.Event')]
assign('dd', datadist(cc))
options(datadist = 'dd')
cox = cph(Surv(PFS, PFS.Event) ~ (Age + TMB_c)*Drug, data = cc, x = T, y = T, surv = T)
cox
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
# Filter patients
tmb = clinical[-which(is.na(clinical$TMB)),]
cc = tmb
# cc = cc[which(cc$StageIV == 'yes'),]
print(table(cc$tumor.type, cc$Drug))
cc$TMB_c = ifelse(cc$TMB <= 100, 'low',
ifelse(cc$TMB < 242 & cc$TMB > 100, 'medium', 'high'))
cc$PFS.Event = as.numeric(cc$PFS.Event)
# cc = cc[-which(is.na(cc$PFS)),]
cc = cc[, c('Age', 'TMB_c', 'Drug', 'PFS', 'PFS.Event', 'StageIV')]
assign('dd', datadist(cc))
options(datadist = 'dd')
cox = cph(Surv(PFS, PFS.Event) ~ (Age + TMB_c)*Drug, data = cc, x = T, y = T, surv = T)
cox
require(survival)
require(rms)
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
# Filter patients
tmb = clinical[-which(is.na(clinical$TMB)),]
cc = tmb
# cc = cc[which(cc$StageIV == 'yes'),]
print(table(cc$tumor.type, cc$Drug))
cc$TMB_c = ifelse(cc$TMB <= 100, 'low',
ifelse(cc$TMB < 242 & cc$TMB > 100, 'medium', 'high'))
cc$PFS.Event = as.numeric(cc$PFS.Event)
# cc = cc[-which(is.na(cc$PFS)),]
cc = cc[, c('Age', 'TMB_c', 'Drug', 'PFS', 'PFS.Event', 'StageIV')]
assign('dd', datadist(cc))
options(datadist = 'dd')
cox = cph(Surv(PFS, PFS.Event) ~ (Age + TMB_c + StageIV)*Drug, data = cc, x = T, y = T, surv = T)
cox
cox = coxph(Surv(PFS, PFS.Event) ~ (Age + TMB_c + StageIV)*Drug, data = cc, x = T, y = T, surv = T)
options(datadist = NULL)
cox = coxph(Surv(PFS, PFS.Event) ~ (Age + TMB_c + StageIV)*Drug, data = cc, x = T, y = T, surv = T)
dev.off(datadist)
ccc = cc[, c('Age', 'TMB_c', 'Drug', 'PFS', 'PFS.Event', 'StageIV')]
require(survival)
require(rms)
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
# Filter patients
tmb = clinical[-which(is.na(clinical$TMB)),]
cc = tmb
# cc = cc[which(cc$StageIV == 'yes'),]
print(table(cc$tumor.type, cc$Drug))
cc$TMB_c = ifelse(cc$TMB <= 100, 'low',
ifelse(cc$TMB < 242 & cc$TMB > 100, 'medium', 'high'))
cc$PFS.Event = as.numeric(cc$PFS.Event)
# cc = cc[-which(is.na(cc$PFS)),]
cc = cc[, c('Age', 'TMB_c', 'Drug', 'PFS', 'PFS.Event', 'StageIV')]
cox = coxph(Surv(PFS, PFS.Event) ~ (Age + TMB_c + StageIV)*Drug, data = cc, x = T, y = T)
summary(cox)
cox = coxph(Surv(PFS, PFS.Event) ~ (Age + StageIV + TMB_c:Drug, data = cc, x = T, y = T)
cox = coxph(Surv(PFS, PFS.Event) ~ Age + StageIV + TMB_c:Drug, data = cc, x = T, y = T)
summary(cox)
require(survival)
require(rms)
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
# Filter patients
tmb = clinical[-which(is.na(clinical$TMB)),]
cc = tmb
cc = cc[which(cc$StageIV == 'yes'),]
print(table(cc$tumor.type, cc$Drug))
cc$TMB_c = ifelse(cc$TMB <= 100, 'low',
ifelse(cc$TMB < 242 & cc$TMB > 100, 'medium', 'high'))
cc$PFS.Event = as.numeric(cc$PFS.Event)
# cc = cc[-which(is.na(cc$PFS)),]
cc = cc[, c('Age', 'TMB_c', 'Drug', 'PFS', 'PFS.Event', 'StageIV')]
cox = coxph(Surv(PFS, PFS.Event) ~ Age + StageIV + TMB_c:Drug, data = cc, x = T, y = T)
require(survival)
require(rms)
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
# Filter patients
tmb = clinical[-which(is.na(clinical$TMB)),]
cc = tmb
cc = cc[which(cc$StageIV == 'yes'),]
print(table(cc$tumor.type, cc$Drug))
cc$TMB_c = ifelse(cc$TMB <= 100, 'low',
ifelse(cc$TMB < 242 & cc$TMB > 100, 'medium', 'high'))
cc$PFS.Event = as.numeric(cc$PFS.Event)
# cc = cc[-which(is.na(cc$PFS)),]
cc = cc[, c('Age', 'TMB_c', 'Drug', 'PFS', 'PFS.Event')]
cox = coxph(Surv(PFS, PFS.Event) ~ Age + TMB_c:Drug, data = cc, x = T, y = T)
summary(cox)
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
# Filter patients
tmb = clinical[-which(is.na(clinical$TMB)),]
cc = tmb
cc = cc[which(cc$StageIV == 'yes'),]
print(table(cc$tumor.type, cc$Drug))
cc$TMB_c = ifelse(cc$TMB <= 100, 'low',
ifelse(cc$TMB < 242 & cc$TMB > 100, 'medium', 'high'))
cc$PFS.Event = as.numeric(cc$PFS.Event)
# cc = cc[-which(is.na(cc$PFS)),]
cc = cc[, c('Age', 'Gender', 'TMB_c', 'Drug', 'PFS', 'PFS.Event')]
cox = coxph(Surv(PFS, PFS.Event) ~ Age + Gender TMB_c:Drug, data = cc, x = T, y = T)
summary(cox)
clinical.test = read.csv('~/git/PD1-DREAM-Pred1ctors/CM_026_formatted_synthetic_data_subset/clinical_data.csv', header = T, row.names = 1)
View(clinical.test)
# load ours objects
trainObj = readRDS('~/projects/Anti-PD1/models_v2/pfs_biospear.rds')
# load ours objects
trainObj = readRDS('~/projects/Anti-PD1/models_v2/pfs_biospear.rds')
names(trainObj$genes)
# get command lines args: args[1] rnas-seq gene level count data; args[2] clinical data; args[3] output file
# args = commandArgs(trailingOnly=TRUE)
counts.test = fread('~/git/PD1-DREAM-Pred1ctors/CM_026_formatted_synthetic_data_subset/GRCh37ERCC_refseq105_genes_count.csv',data.table = F); rownames(counts) <- counts[,1]; counts <- counts[,-1]; print("done reading in counts")
#!/usr/bin/env Rscript
require(data.table)
# get command lines args: args[1] rnas-seq gene level count data; args[2] clinical data; args[3] output file
# args = commandArgs(trailingOnly=TRUE)
counts.test = fread('~/git/PD1-DREAM-Pred1ctors/CM_026_formatted_synthetic_data_subset/GRCh37ERCC_refseq105_genes_count.csv',data.table = F); rownames(counts) <- counts[,1]; counts <- counts[,-1]; print("done reading in counts")
# get command lines args: args[1] rnas-seq gene level count data; args[2] clinical data; args[3] output file
# args = commandArgs(trailingOnly=TRUE)
counts.test = fread('~/git/PD1-DREAM-Pred1ctors/CM_026_formatted_synthetic_data_subset/GRCh37ERCC_refseq105_genes_count.csv',data.table = F); rownames(counts.test) <- counts.test[,1]; counts.test <- counts.test[,-1]; print("done reading in counts")
counts.test = as.data.frame(t(counts.test))
clinical.test = read.csv('~/git/PD1-DREAM-Pred1ctors/CM_026_formatted_synthetic_data_subset/clinical_data.csv', header = T, row.names = 1); print('Done reading clinical data!')
names(clinical.test)
pcaModel = trainObj$pca
class(pcaModel)
model2
model2 = readRDS('~/projects/Anti-PD1/models_v2/pfs_model2.rds')
model2
summary(model2)
model2$model
summary(model2$model)
class(model2$model)
names(model2$train)
require(survival)
# PFS
# =================================
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
counts = data$counts
clinical = clinical[which(clinical$tumor.type == 'LUNG NON-SQUAMOUS CANCER' | clinical$tumor.type == 'SQUAMOUS LUNG CANCER'),]
clinical$PFS = as.numeric(clinical$PFS)
clinical$PFS.Event  = as.numeric(clinical$PFS.Event)
clinical = clinical[which(clinical$StageIV == 'yes'),]
cox.t = coxph(Surv(PFS, PFS.Event) ~ Age + tumor.type*Drug , data = clinical, x = T)
cox.t
summary(cox.t)
class(cox.t)
class(model2$model)
summary(model2$model)
require(survival)
# Predict module 2
summary(model2$model)
clinical.test$CRFHIST
model2$train
head(model2$train)
# PFS
# =================================
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
counts = data$counts
clinical = clinical[which(clinical$tumor.type == 'LUNG NON-SQUAMOUS CANCER' | clinical$tumor.type == 'SQUAMOUS LUNG CANCER'),]
clinical$PFS = as.numeric(clinical$PFS)
clinical$PFS.Event  = as.numeric(clinical$PFS.Event)
clinical = clinical[which(clinical$StageIV == 'yes'),]
str(clinical)
clinical$tumor.type = as.factor(clinical$tumor.type)
clinical$tumor.type
cox.t = coxph(Surv(PFS, PFS.Event) ~ Age + tumor.type*Drug , data = clinical, x = T)
summary(cox.t)
# get command lines args: args[1] rnas-seq gene level count data; args[2] clinical data; args[3] output file
# args = commandArgs(trailingOnly=TRUE)
counts.test = fread('~/git/PD1-DREAM-Pred1ctors/CM_026_formatted_synthetic_data_subset/GRCh37ERCC_refseq105_genes_count.csv',data.table = F); rownames(counts.test) <- counts.test[,1]; counts.test <- counts.test[,-1]; print("done reading in counts")
counts.test = as.data.frame(t(counts.test))
clinical.test = read.csv('~/git/PD1-DREAM-Pred1ctors/CM_026_formatted_synthetic_data_subset/clinical_data.csv', header = T, row.names = 1); print('Done reading clinical data!')
table(clinical.test$CRFHIST)
# PFS
# =================================
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
counts = data$counts
clinical = clinical[which(clinical$tumor.type == 'LUNG NON-SQUAMOUS CANCER' | clinical$tumor.type == 'SQUAMOUS LUNG CANCER'),]
table(clinical$tumor.type)
132+104
clinical$tumor.type = ifelse(clinical$tumor.type == 'LUNG NON-SQUAMOUS CANCER', 'NON-SQUAMOUS', 'SQUAMOUS')
cox.t = coxph(Surv(PFS, PFS.Event) ~ Age + tumor.type*Drug , data = clinical, x = T)
data = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')
clinical = data$clinical
counts = data$counts
clinical = clinical[which(clinical$tumor.type == 'LUNG NON-SQUAMOUS CANCER' | clinical$tumor.type == 'SQUAMOUS LUNG CANCER'),]
clinical$PFS = as.numeric(clinical$PFS)
clinical$PFS.Event  = as.numeric(clinical$PFS.Event)
clinical = clinical[which(clinical$StageIV == 'yes'),]
clinical$tumor.type = ifelse(clinical$tumor.type == 'LUNG NON-SQUAMOUS CANCER', 'NON-SQUAMOUS', 'SQUAMOUS')
cox.t = coxph(Surv(PFS, PFS.Event) ~ Age + tumor.type*Drug , data = clinical, x = T)
summary(cox.t)
saveRDS(list(model = cox.t, train = clinical), file = '~/projects/Anti-PD1/models_v2/pfs_model2.rds')
model3 = readRDS('~/projects/Anti-PD1/models_v2/pfs_model3.rds')$model
# Predict module 3
summary(model3)
clinical.test = read.csv('~/git/PD1-DREAM-Pred1ctors/CM_026_formatted_synthetic_data_subset/clinical_data.csv', header = T, row.names = 1); print('Done reading clinical data!')
#!/usr/bin/env Rscript
setwd('~/git/PD1-DREAM-Pred1ctors/pfs_v2/')
# load ours objects
trainObj = readRDS('models_v2/pfs_biospear.rds')
require(impute)
#!/usr/bin/env Rscript
setwd('~/git/PD1-DREAM-Pred1ctors/pfs_v2/')
# Progression Free Survival (PFS)
# =====================================
# load packages
require(data.table)
require(sva)
require(survival)
require(impute)
source('utils.r')
# get command lines args: args[1] rnas-seq gene level count data; args[2] clinical data; args[3] output file
# args = commandArgs(trailingOnly=TRUE)
counts.test = fread('~/git/PD1-DREAM-Pred1ctors/CM_026_formatted_synthetic_data_subset/GRCh37ERCC_refseq105_genes_count.csv',data.table = F); rownames(counts.test) <- counts.test[,1]; counts.test <- counts.test[,-1]; print("done reading in counts")
counts.test = as.data.frame(t(counts.test))
clinical.test = read.csv('~/git/PD1-DREAM-Pred1ctors/CM_026_formatted_synthetic_data_subset/clinical_data.csv', header = T, row.names = 1); print('Done reading clinical data!')
# load ours objects
trainObj = readRDS('models/pfs_biospear.rds')
pcaModel = trainObj$pca
trainData = trainObj$train
genes = names(trainObj$genes)
model1 = trainObj$model
model2 = readRDS('models/pfs_model2.rds')$model
model3 = readRDS('models/pfs_model3.rds')$model
print('Done load training objects!')
# Match genes in test count data
counts.test = counts.test[, match(genes, names(counts.test))]
print('Done match genes!')
# Standarize and scale
counts.test = standarize(counts.test, log2 = T, scale = T)
print('Done standarization!')
# Impute NA´s
impNA = impute.knn(t(counts.test))
counts.test = as.data.frame(t(impNA$data))
print('Done NA imputing!')
# ComBat
meta = data.frame(patID = c(rownames(trainData), rownames(counts.test)),
subset = c(rep('train', nrow(counts.train)), rep('test', nrow(counts.test))))
trainData
#!/usr/bin/env Rscript
setwd('~/git/PD1-DREAM-Pred1ctors/pfs_v2/')
# Progression Free Survival (PFS)
# =====================================
# load packages
require(data.table)
require(sva)
require(survival)
require(impute)
source('utils.r')
# get command lines args: args[1] rnas-seq gene level count data; args[2] clinical data; args[3] output file
# args = commandArgs(trailingOnly=TRUE)
counts.test = fread('~/git/PD1-DREAM-Pred1ctors/CM_026_formatted_synthetic_data_subset/GRCh37ERCC_refseq105_genes_count.csv',data.table = F); rownames(counts.test) <- counts.test[,1]; counts.test <- counts.test[,-1]; print("done reading in counts")
counts.test = as.data.frame(t(counts.test))
clinical.test = read.csv('~/git/PD1-DREAM-Pred1ctors/CM_026_formatted_synthetic_data_subset/clinical_data.csv', header = T, row.names = 1); print('Done reading clinical data!')
# load ours objects
trainObj = readRDS('models/pfs_biospear.rds')
setwd('~/git/PD1-DREAM-Pred1ctors/pfs_v2/')
# Progression Free Survival (PFS)
# =====================================
# load packages
require(data.table)
require(sva)
require(survival)
require(impute)
source('utils.r')
# get command lines args: args[1] rnas-seq gene level count data; args[2] clinical data; args[3] output file
# args = commandArgs(trailingOnly=TRUE)
counts.test = fread('~/git/PD1-DREAM-Pred1ctors/CM_026_formatted_synthetic_data_subset/GRCh37ERCC_refseq105_genes_count.csv',data.table = F); rownames(counts.test) <- counts.test[,1]; counts.test <- counts.test[,-1]; print("done reading in counts")
counts.test = as.data.frame(t(counts.test))
clinical.test = read.csv('~/git/PD1-DREAM-Pred1ctors/CM_026_formatted_synthetic_data_subset/clinical_data.csv', header = T, row.names = 1); print('Done reading clinical data!')
# load ours objects
trainObj = readRDS('models/pfs_biospear.rds')
pcaModel = trainObj$pca
trainData = trainObj$train
counts.train = trainObj$genes
genes = names(counts.train)
model1 = trainObj$model
model2 = readRDS('models/pfs_model2.rds')$model
model3 = readRDS('models/pfs_model3.rds')$model
print('Done load training objects!')
counts.test = counts.test[, match(genes, names(counts.test))]
print('Done match genes!')
# Standarize and scale
counts.test = standarize(counts.test, log2 = T, scale = T)
print('Done standarization!')
# Impute NA´s
impNA = impute.knn(t(counts.test))
counts.test = as.data.frame(t(impNA$data))
print('Done NA imputing!')
# ComBat
meta = data.frame(patID = c(rownames(counts.train), rownames(counts.test)),
subset = c(rep('train', nrow(counts.train)), rep('test', nrow(counts.test))))
rownames(meta) = meta$patID
counts = rbind.data.frame(trainData, counts.test)
counts = rbind.data.frame(counts.train, counts.test)
m = model.matrix(~1, data = meta)
combat = ComBat(dat = t(counts), batch = meta$subset, mod = m, ref.batch = 'train')
combat = as.data.frame(t(combat))
counts.test = combat[match(rownames(counts.test), rownames(combat)), ]
print('Done ComBat!')
# Predict PCA
test.pca = predict(pcaModel, newdata = counts.test)
test.pca = as.data.frame(test.pca)
print('Done predict PCA´s in test data!')
# Add Clinical data
test.pca$Drug = 0
test.pca$Cohort = 0.5
test.pca$Age = round(clinical.test$AAGE, 0)
print('Done add clinical data!')
# Predict module 1
method = ''
# Predict module 1
method = 'alassoU'
pred1 = predBiospear(res = model1, method = method, newdata = test.pca, randomPFS = T)
