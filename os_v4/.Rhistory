PD1 = which(test$treatment=='anti-PD1')
CHEMO = which(test$treatment=='Chemo')
pd = survcomp::concordance.index(test$pred[PD1], test$OS[PD1], test$OS.Event[PD1])$c.index
ch = survcomp::concordance.index(test$pred[CHEMO],test$OS[CHEMO], test$OS.Event[CHEMO])$c.index
print(paste0('Cox', ': PD-1 arm = ', pd, ' ; Chemo arm = ', ch))
require(FCBF)
require(survival)
require(survminer)
counts = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')$counts
clinical = readRDS('~/projects/Anti-PD1/data/metacohort/clinical_metacohort2.rds')
clinical = clinical[-which(clinical$Drug == 'see paper'),]
clinical = clinical[-which(is.na(clinical$OS.Event)),]
clinical = clinical[which(clinical$tumor.type == 'Melanoma'),]
pats = intersect(clinical$patID, rownames(counts))
counts = counts[match(pats, rownames(counts)),]
clinical = clinical[match(pats, clinical$patID),]
data = cbind.data.frame(clinical, counts)
data$OS.Event = as.numeric(data$OS.Event)
set.seed(1993)
tr = sample(rownames(data), nrow(data)*0.8)
train = data[tr,]
test = data[setdiff(rownames(data), tr),]
test = test[-which(is.na(test$OS)),]
cox = coxph(Surv(OS, OS.Event) ~ Age + (TNFAIP3 + ATG7 + CD1A + LTK + PTGS2 + TNFSF14 + VEGFC + ZNF205) * Drug, data = train, x = T)
summary(cox)
treat = test$Drug
test$Drug = 'anti-PD1'
test$Age[which(is.na(test$Age))] = median(test$Age, na.rm = T)
pred = predict(cox, test)
test$pred = pred
test$treatment = treat
PD1 = which(test$treatment=='anti-PD1')
CHEMO = which(test$treatment=='Chemo')
pd = survcomp::concordance.index(test$pred[PD1], test$OS[PD1], test$OS.Event[PD1])$c.index
ch = survcomp::concordance.index(test$pred[CHEMO],test$OS[CHEMO], test$OS.Event[CHEMO])$c.index
print(paste0('Cox', ': PD-1 arm = ', pd, ' ; Chemo arm = ', ch))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
require(FCBF)
require(survival)
require(survminer)
counts = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')$counts
clinical = readRDS('~/projects/Anti-PD1/data/metacohort/clinical_metacohort2.rds')
clinical = clinical[-which(clinical$Drug == 'see paper'),]
clinical = clinical[-which(is.na(clinical$OS.Event)),]
clinical = clinical[which(clinical$tumor.type == 'Melanoma'),]
pats = intersect(clinical$patID, rownames(counts))
counts = counts[match(pats, rownames(counts)),]
clinical = clinical[match(pats, clinical$patID),]
require(FCBF)
require(survival)
require(survminer)
counts = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')$counts
clinical = readRDS('~/projects/Anti-PD1/data/metacohort/clinical_metacohort2.rds')
clinical = clinical[-which(clinical$Drug == 'see paper'),]
clinical = clinical[-which(is.na(clinical$OS.Event)),]
clinical = clinical[which(clinical$tumor.type == 'Melanoma'),]
pats = intersect(clinical$patID, rownames(counts))
counts = counts[match(pats, rownames(counts)),]
clinical = clinical[match(pats, clinical$patID),]
# All stages in melanoma
# ==================================================
data = cbind.data.frame(counts, target = clinical$OS.Event)
y = data$target
x = subset(data, select = -c(target))
dis = discretize_exprs(t(x))
fcbf = fcbf(dis, y, verbose = T, thresh = 0.0025)
res = x[, fcbf$index]
train1 = cbind.data.frame(age = clinical$Age,
drug = clinical$Drug,
res,
OS = clinical$OS,
OS.Event = as.numeric(clinical$OS.Event))
saveRDS(train1, file = '~/projects/Anti-PD1/models_v3/train1.rds')
train1 = readRDS('~/projects/Anti-PD1/models_v3/train1.rds')
set.seed(1993)
tr = sample(rownames(train1), nrow(train1)*0.8)
train = train1[tr,]
test = train1[setdiff(rownames(train1), tr),]
test = test[-which(is.na(test$OS)),]
cox1 = coxph(Surv(OS, OS.Event) ~ age + (IDO1 + TRAF2 + USP9Y + SPP1 + CD34 + CEACAM6 + TNFRSF10B)* drug, data = train, x = T)
summary(cox1)
treat = test$drug
test$drug = 'anti-PD1'
test$age[which(is.na(test$age))] = median(test$age, na.rm = T)
pred = predict(cox1, test)
test$pred = pred
test$treatment = treat
PD1 = which(test$treatment=='anti-PD1')
CHEMO = which(test$treatment=='Chemo')
pd = survcomp::concordance.index(test$pred[PD1], test$OS[PD1], test$OS.Event[PD1])$c.index
ch = survcomp::concordance.index(test$pred[CHEMO],test$OS[CHEMO], test$OS.Event[CHEMO])$c.index
print(paste0('Cox', ': PD-1 arm = ', pd, ' ; Chemo arm = ', ch))
summary(cox1)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
clinical$TMB
clinical$Cohort
require(FCBF)
require(survival)
require(survminer)
counts = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')$counts
clinical = readRDS('~/projects/Anti-PD1/data/metacohort/clinical_metacohort2.rds')
clinical = clinical[-which(clinical$Drug == 'see paper'),]
clinical = clinical[-which(is.na(clinical$OS.Event)),]
clinical = clinical[which(clinical$tumor.type == 'Melanoma'),]
pats = intersect(clinical$patID, rownames(counts))
counts = counts[match(pats, rownames(counts)),]
clinical = clinical[match(pats, clinical$patID),]
data = cbind.data.frame(clinical, counts)
data$OS.Event = as.numeric(data$OS.Event)
set.seed(1993)
tr = sample(rownames(data), nrow(data)*0.8)
train = data[tr,]
test = data[setdiff(rownames(data), tr),]
test = test[-which(is.na(test$OS)),]
cox = coxph(Surv(OS, OS.Event) ~ Age + TMB + TNFAIP3 + ATG7 + CD1A + LTK + PTGS2 + VEGFC * Drug, data = train, x = T)
summary(cox)
treat = test$Drug
test$Drug = 'anti-PD1'
test$Age[which(is.na(test$Age))] = median(test$Age, na.rm = T)
pred = predict(cox, test)
test$pred = pred
test$treatment = treat
PD1 = which(test$treatment=='anti-PD1')
CHEMO = which(test$treatment=='Chemo')
pd = survcomp::concordance.index(test$pred[PD1], test$OS[PD1], test$OS.Event[PD1])$c.index
ch = survcomp::concordance.index(test$pred[CHEMO],test$OS[CHEMO], test$OS.Event[CHEMO])$c.index
print(paste0('Cox', ': PD-1 arm = ', pd, ' ; Chemo arm = ', ch))
source('~/.active-rstudio-document', echo=TRUE)
require(FCBF)
require(survival)
require(survminer)
counts = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')$counts
clinical = readRDS('~/projects/Anti-PD1/data/metacohort/clinical_metacohort2.rds')
clinical = clinical[-which(clinical$Drug == 'see paper'),]
clinical = clinical[-which(is.na(clinical$OS.Event)),]
clinical = clinical[which(clinical$tumor.type == 'Melanoma'),]
pats = intersect(clinical$patID, rownames(counts))
counts = counts[match(pats, rownames(counts)),]
clinical = clinical[match(pats, clinical$patID),]
data = cbind.data.frame(clinical, counts)
data$OS.Event = as.numeric(data$OS.Event)
set.seed(1993)
tr = sample(rownames(data), nrow(data)*0.8)
train = data[tr,]
test = data[setdiff(rownames(data), tr),]
test = test[-which(is.na(test$OS)),]
cox = coxph(Surv(OS, OS.Event) ~ Age + TNFAIP3 + ATG7 + CD1A + LTK + PTGS2 + VEGFC * Drug, data = train, x = T)
summary(cox)
# Cox with all data
cox = coxph(Surv(OS, OS.Event) ~ Age + TNFAIP3 + ATG7 + CD1A + LTK + PTGS2 + VEGFC * Drug, data = data, x = T)
summary(cox)
# Cox with all data
cox = coxph(Surv(OS, OS.Event) ~ Age + (TNFAIP3 + ATG7 + CD1A + LTK + PTGS2 + VEGFC) * Drug, data = data, x = T)
summary(cox)
# Cox with all data
cox = coxph(Surv(OS, OS.Event) ~ Age + (TNFAIP3 + ATG7 + CD1A + LTK + PTGS2 + TNFSF14 + VEGFC + ZNF205) * Drug, data = data, x = T)
summary(cox)
# Cox with all data
cox = coxph(Surv(OS, OS.Event) ~ Age + (TNFAIP3 + ATG7 + CD1A + LTK + PTGS2 + VEGFC) * Drug, data = data, x = T)
summary(cox)
train = subset(data, select = c(OS, OS.Event, Age, TNFAIP3, ATG7, CD1A, LTK, PTGS2, VEGFC, Drug))
predict(cox, train)
pred = predict(cox, train)
m = median(pred, na.rm = T)
hist(pred, 100)
risk = ifelse(pred > m, 'high', 'low')
data$risk = risk
train$risk = risk
ggsurvplot(survfit(Surv(OS, OS.Event) ~ risk, data = train), data = train, risk.table = T)
train$Drug
require(FCBF)
require(survival)
require(survminer)
counts = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')$counts
clinical = readRDS('~/projects/Anti-PD1/data/metacohort/clinical_metacohort2.rds')
clinical = clinical[-which(clinical$Drug == 'see paper'),]
clinical = clinical[-which(is.na(clinical$OS.Event)),]
clinical = clinical[which(clinical$tumor.type == 'Melanoma'),]
pats = intersect(clinical$patID, rownames(counts))
counts = counts[match(pats, rownames(counts)),]
clinical = clinical[match(pats, clinical$patID),]
data = cbind.data.frame(clinical, counts)
data$OS.Event = as.numeric(data$OS.Event)
set.seed(1993)
tr = sample(rownames(data), nrow(data)*0.8)
train = data[tr,]
test = data[setdiff(rownames(data), tr),]
test = test[-which(is.na(test$OS)),]
# Cox with all data
cox = coxph(Surv(OS, OS.Event) ~ Age + (TNFAIP3 + ATG7 + CD1A + LTK + PTGS2 + VEGFC) * Drug, data = data, x = T)
summary(cox)
train = subset(data, select = c(OS, OS.Event, Age, TNFAIP3, ATG7, CD1A, LTK, PTGS2, VEGFC, Drug))
saveRDS(list(train = train, model = cox), file = '~/projects/Anti-PD1/models_v3/os_cox_v3.rds')
#!/usr/bin/env Rscript
setwd('~/git/PD1-DREAM-Pred1ctors/os_v4/')
# load ours objects
trainObj = readRDS('models/os_cox_v3.rds')
trainData = trainObj$train
cox = trainObj$model
summary(cox)
names(train)
names(trainData)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
require(FCBF)
require(survival)
require(survminer)
counts = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')$counts
clinical = readRDS('~/projects/Anti-PD1/data/metacohort/clinical_metacohort2.rds')
clinical = clinical[-which(clinical$Drug == 'see paper'),]
clinical = clinical[-which(is.na(clinical$OS.Event)),]
clinical = clinical[which(clinical$tumor.type == 'Melanoma'),]
pats = intersect(clinical$patID, rownames(counts))
counts = counts[match(pats, rownames(counts)),]
clinical = clinical[match(pats, clinical$patID),]
clinical$stageiii = ifelse(clinical$stage == 'stage iii' | clinical$stage == 'stage iiia' | clinical$stage == 'stage iiib' | clinical$stage == 'stage iiic', 'yes', 'no')
clinical$Advstage = ifelse(clinical$stageiii == 'yes' | clinical$StageIV == 'yes', 'yes', 'no')
table(clinical$Advstage, clinical$tumor.type)
table(clinical$Advstage, clinical$Drug)
require(FCBF)
require(survival)
require(survminer)
counts = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')$counts
clinical = readRDS('~/projects/Anti-PD1/data/metacohort/clinical_metacohort2.rds')
clinical = clinical[-which(clinical$Drug == 'see paper'),]
clinical = clinical[-which(is.na(clinical$OS.Event)),]
clinical = clinical[which(clinical$tumor.type == 'Melanoma'),]
clinical$stageiii = ifelse(clinical$stage == 'stage iii' | clinical$stage == 'stage iiia' | clinical$stage == 'stage iiib' | clinical$stage == 'stage iiic', 'yes', 'no')
clinical$Advstage = ifelse(clinical$stageiii == 'yes' | clinical$StageIV == 'yes', 'yes', 'no')
clinical = clinical[which(clinical$Advstage == 'yes'),]
pats = intersect(clinical$patID, rownames(counts))
counts = counts[match(pats, rownames(counts)),]
clinical = clinical[match(pats, clinical$patID),]
# Feature Selection
cc = clinical[which(clinical$Drug == 'anti-PD1'),]
counts = counts[match(cc$patID, rownames(counts)),]
table(cc$Cohort)
y = cc$OS.Event
x = counts
dis = discretize_exprs(t(x))
fcbf = fcbf(dis, y, verbose = T, thresh = 0.0025)
res = x[, fcbf$index]
names(res)
require(FCBF)
require(survival)
require(survminer)
counts = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')$counts
clinical = readRDS('~/projects/Anti-PD1/data/metacohort/clinical_metacohort2.rds')
clinical = clinical[-which(clinical$Drug == 'see paper'),]
clinical = clinical[-which(is.na(clinical$OS.Event)),]
clinical = clinical[which(clinical$tumor.type == 'Melanoma'),]
clinical$stageiii = ifelse(clinical$stage == 'stage iii' | clinical$stage == 'stage iiia' | clinical$stage == 'stage iiib' | clinical$stage == 'stage iiic', 'yes', 'no')
clinical$Advstage = ifelse(clinical$stageiii == 'yes' | clinical$StageIV == 'yes', 'yes', 'no')
clinical = clinical[which(clinical$Advstage == 'yes'),]
pats = intersect(clinical$patID, rownames(counts))
counts = counts[match(pats, rownames(counts)),]
clinical = clinical[match(pats, clinical$patID),]
# Feature Selection
cc = clinical[which(clinical$Drug == 'anti-PD1'),]
x = counts[match(cc$patID, rownames(counts)),]
y = cc$OS.Event
dis = discretize_exprs(t(x))
fcbf = fcbf(dis, y, verbose = T, thresh = 0.0025)
res = x[, fcbf$index]
# Create Cox Model
data = cbind.data.frame(clinical[, c('OS', 'OS.Event', 'Drug', 'Age')],
counts[,match(names(res), names(counts))])
names(data)
# Create Cox Model
data = cbind.data.frame(clinical[, c('OS', 'OS.Event', 'Drug', 'Age', 'Gender')],
counts[,match(names(res), names(counts))])
names(data)
cox = coxph(Surv(OS, OS.Event) ~ Age + Gender + (TNFAIP3 + ATG7 + CD1A + LTK + TNFSF14 + VEGFC + PTGS2) * Drug, data = data, x = T)
data$OS.Event = as.numeric(data$OS.Event)
cox = coxph(Surv(OS, OS.Event) ~ Age + Gender + (TNFAIP3 + ATG7 + CD1A + LTK + TNFSF14 + VEGFC + PTGS2) * Drug, data = data, x = T)
summary(cox)
cox = coxph(Surv(OS, OS.Event) ~ Age + Gender + (TNFAIP3 + CD1A + LTK + VEGFC + PTGS2) * Drug, data = data, x = T)
summary(cox)
cox = coxph(Surv(OS, OS.Event) ~ Age + Gender + CD1A (TNFAIP3 + LTK + VEGFC) * Drug, data = data, x = T)
cox = coxph(Surv(OS, OS.Event) ~ Age + Gender + CD1A + (TNFAIP3 + LTK + VEGFC) * Drug, data = data, x = T)
summary(cox)
# Split into train and test
set.seed(1993)
tr = sample(rownames(data), nrow(data)*0.8)
train = data[tr,]
test = data[setdiff(rownames(data), tr),]
test = test[-which(is.na(test$OS)),]
require(FCBF)
require(survival)
require(survminer)
counts = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')$counts
clinical = readRDS('~/projects/Anti-PD1/data/metacohort/clinical_metacohort2.rds')
clinical = clinical[-which(clinical$Drug == 'see paper'),]
clinical = clinical[-which(is.na(clinical$OS.Event)),]
clinical = clinical[which(clinical$tumor.type == 'Melanoma'),]
clinical$stageiii = ifelse(clinical$stage == 'stage iii' | clinical$stage == 'stage iiia' | clinical$stage == 'stage iiib' | clinical$stage == 'stage iiic', 'yes', 'no')
clinical$Advstage = ifelse(clinical$stageiii == 'yes' | clinical$StageIV == 'yes', 'yes', 'no')
clinical = clinical[which(clinical$Advstage == 'yes'),]
pats = intersect(clinical$patID, rownames(counts))
counts = counts[match(pats, rownames(counts)),]
clinical = clinical[match(pats, clinical$patID),]
# Select only anti-PD1 samples to run the FS algorithm
cc = clinical[which(clinical$Drug == 'anti-PD1'),]
x = counts[match(cc$patID, rownames(counts)),]
y = cc$OS.Event
# Run FCBF
dis = discretize_exprs(t(x))
fcbf = fcbf(dis, y, verbose = T, thresh = 0.0025)
res = x[, fcbf$index]
# Create data to train
data = cbind.data.frame(clinical[, c('OS', 'OS.Event', 'Drug', 'Age', 'Gender')],
counts[,match(names(res), names(counts))])
data$OS.Event = as.numeric(data$OS.Event)
# Split into train and test
set.seed(1993)
tr = sample(rownames(data), nrow(data)*0.8)
train = data[tr,]
test = data[setdiff(rownames(data), tr),]
test = test[-which(is.na(test$OS)),]
# Create Cox model
cox = coxph(Surv(OS, OS.Event) ~ Age + Gender + (TNFAIP3 + ATG7 + CD1A + LTK + TNFSF14 + VEGFC + PTGS2) * Drug, data = train, x = T)
summary(cox)
# Predict by each arm
treat = test$Drug
test$Drug = 'anti-PD1'
test$Drug = 'anti-PD1'
test
tr = sample(rownames(data), nrow(data)*0.8)
tr
train = data[tr,]
test = data[setdiff(rownames(data), tr),]
test = test[-which(is.na(test$OS)),]
# Predict by each arm
treat = test$Drug
test$Drug = 'anti-PD1'
test$Age[which(is.na(test$Age))] = median(test$Age, na.rm = T)
pred = predict(cox, test)
test$pred = pred
test$treatment = treat
PD1 = which(test$treatment=='anti-PD1')
CHEMO = which(test$treatment=='Chemo')
pd = survcomp::concordance.index(test$pred[PD1], test$OS[PD1], test$OS.Event[PD1])$c.index
ch = survcomp::concordance.index(test$pred[CHEMO],test$OS[CHEMO], test$OS.Event[CHEMO])$c.index
print(paste0('Cox', ': PD-1 arm = ', pd, ' ; Chemo arm = ', ch))
source('~/.active-rstudio-document', echo=TRUE)
tr = sample(rownames(data), nrow(data)*0.8)
train = data[tr,]
test = data[setdiff(rownames(data), tr),]
test = test[-which(is.na(test$OS)),]
# Create Cox model
cox = coxph(Surv(OS, OS.Event) ~ Age + Gender + (TNFAIP3 + ATG7 + CD1A + LTK + TNFSF14 + VEGFC + PTGS2) * Drug, data = train, x = T)
summary(cox)
# Predict by each arm
treat = test$Drug
test$Drug = 'anti-PD1'
tr = sample(rownames(data), nrow(data)*0.8)
train = data[tr,]
test = data[setdiff(rownames(data), tr),]
test = test[-which(is.na(test$OS)),]
tr = sample(rownames(data), nrow(data)*0.8)
train = data[tr,]
test = data[setdiff(rownames(data), tr),]
test$OS
test = test[-which(is.na(test$OS)),]
# Create Cox model
cox = coxph(Surv(OS, OS.Event) ~ Age + Gender + (TNFAIP3 + ATG7 + CD1A + LTK + TNFSF14 + VEGFC + PTGS2) * Drug, data = train, x = T)
summary(cox)
# Predict by each arm
treat = test$Drug
test$Drug = 'anti-PD1'
test$Age[which(is.na(test$Age))] = median(test$Age, na.rm = T)
pred = predict(cox, test)
test$pred = pred
test$treatment = treat
PD1 = which(test$treatment=='anti-PD1')
CHEMO = which(test$treatment=='Chemo')
pd = survcomp::concordance.index(test$pred[PD1], test$OS[PD1], test$OS.Event[PD1])$c.index
ch = survcomp::concordance.index(test$pred[CHEMO],test$OS[CHEMO], test$OS.Event[CHEMO])$c.index
print(paste0('Cox', ': PD-1 arm = ', pd, ' ; Chemo arm = ', ch))
table(test$Drug, test$OS.Event)
source('~/.active-rstudio-document', echo=TRUE)
require(FCBF)
require(survival)
require(survminer)
counts = readRDS('~/projects/Anti-PD1/data/metacohort/metacohort.rds')$counts
clinical = readRDS('~/projects/Anti-PD1/data/metacohort/clinical_metacohort2.rds')
clinical = clinical[-which(clinical$Drug == 'see paper'),]
clinical = clinical[-which(is.na(clinical$OS.Event)),]
clinical = clinical[which(clinical$tumor.type == 'Melanoma'),]
clinical$stageiii = ifelse(clinical$stage == 'stage iii' | clinical$stage == 'stage iiia' | clinical$stage == 'stage iiib' | clinical$stage == 'stage iiic', 'yes', 'no')
clinical$Advstage = ifelse(clinical$stageiii == 'yes' | clinical$StageIV == 'yes', 'yes', 'no')
clinical = clinical[which(clinical$Advstage == 'yes'),]
pats = intersect(clinical$patID, rownames(counts))
counts = counts[match(pats, rownames(counts)),]
clinical = clinical[match(pats, clinical$patID),]
# Select only anti-PD1 samples to run the FS algorithm
cc = clinical[which(clinical$Drug == 'anti-PD1'),]
x = counts[match(cc$patID, rownames(counts)),]
y = cc$OS.Event
# Run FCBF
dis = discretize_exprs(t(x))
fcbf = fcbf(dis, y, verbose = T, thresh = 0.0025)
res = x[, fcbf$index]
# Create data to train
data = cbind.data.frame(clinical[, c('OS', 'OS.Event', 'Drug', 'Age', 'Gender')],
counts[,match(names(res), names(counts))])
data$OS.Event = as.numeric(data$OS.Event)
# Split into train and test
set.seed(199)
tr = sample(rownames(data), nrow(data)*0.8)
train = data[tr,]
test = data[setdiff(rownames(data), tr),]
test = test[-which(is.na(test$OS)),]
# Create Cox model
cox = coxph(Surv(OS, OS.Event) ~ Age + Gender + (TNFAIP3 + ATG7 + CD1A + LTK + TNFSF14 + VEGFC + PTGS2) * Drug, data = train, x = T)
summary(cox)
# Split into train and test
set.seed(199)
tr = sample(rownames(data), nrow(data)*0.8)
train = data[tr,]
test = data[setdiff(rownames(data), tr),]
test$OS
test = test[-which(is.na(test$OS)),]
# Split into train and test
set.seed(199)
tr = sample(rownames(data), nrow(data)*0.8)
train = data[tr,]
test = data[setdiff(rownames(data), tr),]
table(is.na(test$OS))
x = table(is.na(test$OS))
x[1]
x[2]
is.na(x[2])
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(test)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
boxplot(data$OS.Event ~ data$TNFAIP3)
boxplot(data$TNFAIP3 ~ data$OS.Event)
t.test(data$TNFAIP3 ~ data$OS.Event)
t.test(data$ATG7 ~ data$OS.Event)
boxplot(data$ATG7 ~ data$OS.Event)
boxplot(data$CD1A ~ data$OS.Event)
t.test(data$CD1A ~ data$OS.Event)
boxplot(data$LTK ~ data$OS.Event)
t.test(data$LTK ~ data$OS.Event)
boxplot(data$TNFSF14 ~ data$OS.Event)
t.test(data$TNFSF14 ~ data$OS.Event)
t.test(data$VEGFC ~ data$OS.Event)
t.test(data$PTGS2 ~ data$OS.Event)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
xx = readRDS('~/git/PD1-DREAM-Pred1ctors/pfs_v2/models/pfs_biospear.rds')
xx
xx$
xx$model
xx$model
pfs = readRDS('~/git/PD1-DREAM-Pred1ctors/pfs_v2/models/pfs_biospear.rds')
pfs$model
os = readRDS('~/git/PD1-DREAM-Pred1ctors/os_v3/models/os_biospear.rds')
os$model
